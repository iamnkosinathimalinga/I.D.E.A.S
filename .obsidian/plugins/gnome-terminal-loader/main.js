/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => GnomeTerminal
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var GnomeTerminal = class extends import_obsidian.Plugin {
  async onload() {
    if (import_obsidian.Platform.isLinux) {
      const loadGnomeTerminal = this.addRibbonIcon(
        "terminal-square",
        "Gnome Terminal",
        (evt) => {
          const { spawn } = require("child_process");
          let openTerminalAtPath = spawn("gnome-terminal", { cwd: this.app.vault.adapter.basePath });
          openTerminalAtPath.on("error", (err) => {
            console.log(err);
          });
        }
      );
      const pythonGnomeTerminal = this.addRibbonIcon(
        "file-terminal",
        "main.py (Gnome Terminal)",
        (evt) => {
          const fs = require("fs");
          const { spawn } = require("child_process");
          const main_file_path = this.app.vault.adapter.basePath + "/main.py";
          if (!fs.existsSync(main_file_path)) {
            const file_data = `print("=" * 80)
print("No main.py was found so one was created!")
print("Add your own code to this file: ${main_file_path}")
print("=" * 80)
input("Key enter to close.")`;
            fs.writeFile(
              main_file_path,
              file_data,
              function(err) {
                if (err) {
                  return console.error(err);
                }
              }
            );
          }
          const command = "gnome-terminal";
          const cmd_args = ["--", "python3", "main.py"];
          let openTerminalAtPath = spawn(command, cmd_args, {
            shell: true,
            //@ts-ignore
            cwd: this.app.vault.adapter.basePath
          });
          openTerminalAtPath.on("error", (err) => {
            console.log(err);
          });
        }
      );
    }
  }
  onunload() {
  }
};


/* nosourcemap */